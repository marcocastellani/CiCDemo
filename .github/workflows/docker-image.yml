on: [push]
name: Linux_Container_Workflow

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Build and push image"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -f cicdemo/Dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/cicdemoapi:${{ github.sha }} -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/cicdemoapi:latest
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/cicdemoapi:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/cicdemoapi:latest

      - name: "Deploy to Azure Container Instances"
        uses: "azure/aci-deploy@v1"
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/cicdemoapi:${{ github.sha }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: aci-cicdemoapi
          location: "Sweden Central"
          environment-variables: ASPNETCORE_ENVIRONMENT=Production
            ConnectionStrings__DefaultConnection=${{ secrets.CONNECTION_STRING }}
            ASPNETCORE_URLS=http://localhost:80/
