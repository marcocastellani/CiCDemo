name: API Build and Deploy

on:
  push:
    branches:
      - main
    paths:
      - cicddemo/** # This workflow will only run when changes are made to the files in the web folder, used for demo purposes
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
    # paths:
    #   - cicddemo/** # This workflow will only run when changes are made to the files in the web folder, used for demo purposes

permissions:
  contents: read
  pull-requests: write

jobs:
  build-and-deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Build and push image"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: "Build and push image"
        run: |
          docker build . -f cicdemo/Dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/cicdemoapi:${{ github.sha }} -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/cicdemoapi:latest
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/cicdemoapi:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/cicdemoapi:latest

      - name: "Setup .NET Core 9.0.x"
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: "Update database"
        run: |
          cd cicdemo
          dotnet tool install --global dotnet-ef 
          dotnet ef database update  --connection "${{ secrets.CONNECTION_STRING }}"

      - name: Extract branch name
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "branch=-${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      # - name: "Deploy to Azure Container Instances"
      #   uses: "azure/aci-deploy@v1"
      #   id: builddeploy
      #   with:
      #     resource-group: ${{ secrets.RESOURCE_GROUP }}
      #     dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ steps.extract_branch.outputs.branch }}
      #     image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/cicdemoapi:${{ github.sha }}
      #     registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
      #     registry-username: ${{ secrets.REGISTRY_USERNAME }}
      #     registry-password: ${{ secrets.REGISTRY_PASSWORD }}
      #     name: aci-cicdemoapi${{ steps.extract_branch.outputs.branch }}
      #     location: "Sweden Central"
      #     ports: 443, 80
      #     log-analytics-workspace: cicd-apparound
      #     log-analytics-workspace-key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}
      #     environment-variables: ASPNETCORE_ENVIRONMENT=Production
      #       ConnectionStrings__BlogDC=${{ secrets.CONNECTION_STRING }}
      #       ASPNETCORE_URLS=https://+:443;http://+:80
      #       ASPNETCORE_Kestrel__Certificates__Default__Path="/app/azurecontainer.io.crt"
      #       ASPNETCORE_Kestrel__Certificates__Default__KeyPath="/app/azurecontainer.io.key" #ORRORE

      - name: "Deploy to Azure Container Instances"
        shell: bash
        run: |
          az container create --resource-group ${{ secrets.RESOURCE_GROUP }} --file nginx/deploy-aci.yaml

      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployed to Azure Container Instances. The API address is: ${{steps.builddeploy.outputs.app-url}}'
            })

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - uses: superbrothers/close-pull-request@v3
        with:
          # Optional. Post a issue comment just before closing a pull request.
          comment: "We do not accept PRs. If you have any questions, please feel free to contact us."
